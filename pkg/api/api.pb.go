// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package cluster_manager_api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	HelloWorldMsg
	HelloWorldReply
*/
package cluster_manager_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The Hello World request
type HelloWorldMsg struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloWorldMsg) Reset()                    { *m = HelloWorldMsg{} }
func (m *HelloWorldMsg) String() string            { return proto.CompactTextString(m) }
func (*HelloWorldMsg) ProtoMessage()               {}
func (*HelloWorldMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloWorldMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response to Hello World
type HelloWorldReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *HelloWorldReply) Reset()                    { *m = HelloWorldReply{} }
func (m *HelloWorldReply) String() string            { return proto.CompactTextString(m) }
func (*HelloWorldReply) ProtoMessage()               {}
func (*HelloWorldReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloWorldReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloWorldMsg)(nil), "cluster_manager_api.HelloWorldMsg")
	proto.RegisterType((*HelloWorldReply)(nil), "cluster_manager_api.HelloWorldReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cluster service

type ClusterClient interface {
	HelloWorld(ctx context.Context, in *HelloWorldMsg, opts ...grpc.CallOption) (*HelloWorldReply, error)
}

type clusterClient struct {
	cc *grpc.ClientConn
}

func NewClusterClient(cc *grpc.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) HelloWorld(ctx context.Context, in *HelloWorldMsg, opts ...grpc.CallOption) (*HelloWorldReply, error) {
	out := new(HelloWorldReply)
	err := grpc.Invoke(ctx, "/cluster_manager_api.Cluster/HelloWorld", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cluster service

type ClusterServer interface {
	HelloWorld(context.Context, *HelloWorldMsg) (*HelloWorldReply, error)
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_HelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloWorldMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).HelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/HelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).HelloWorld(ctx, req.(*HelloWorldMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cluster_manager_api.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloWorld",
			Handler:    _Cluster_HelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4e, 0xce, 0x29, 0x2d, 0x2e, 0x49, 0x2d, 0x8a, 0xcf,
	0x4d, 0xcc, 0x4b, 0x4c, 0x4f, 0x2d, 0x8a, 0x4f, 0x2c, 0xc8, 0x94, 0x92, 0x49, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc,
	0xcf, 0x2b, 0x86, 0x68, 0x91, 0xd2, 0x01, 0x53, 0xc9, 0xba, 0xe9, 0xa9, 0x79, 0xba, 0xc5, 0xe5,
	0x89, 0xe9, 0xe9, 0xa9, 0x45, 0xfa, 0xf9, 0x05, 0x60, 0x15, 0x98, 0xaa, 0x95, 0x94, 0xb9, 0x78,
	0x3d, 0x52, 0x73, 0x72, 0xf2, 0xc3, 0xf3, 0x8b, 0x72, 0x52, 0x7c, 0x8b, 0xd3, 0x85, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x6d,
	0x2e, 0x7e, 0x84, 0xa2, 0xa0, 0xd4, 0x82, 0x9c, 0x4a, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2,
	0xe2, 0xc4, 0x74, 0x98, 0x4a, 0x18, 0xd7, 0xa8, 0x81, 0x91, 0x8b, 0xdd, 0x19, 0xe2, 0x6a, 0xa1,
	0x52, 0x2e, 0x2e, 0x84, 0x46, 0x21, 0x25, 0x3d, 0x2c, 0xbe, 0xd1, 0x43, 0xb1, 0x5e, 0x4a, 0x85,
	0x80, 0x1a, 0xb0, 0xed, 0x4a, 0xb2, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x12, 0x57, 0x12, 0x02, 0x87,
	0x41, 0x99, 0xa1, 0x7e, 0x06, 0x48, 0x41, 0x39, 0x48, 0x81, 0x15, 0xa3, 0x56, 0x12, 0x1b, 0xd8,
	0x6f, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xaa, 0x5f, 0x20, 0x49, 0x01, 0x00, 0x00,
}
