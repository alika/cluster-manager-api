// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package cluster_manager_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateClusterMsg struct {
	// Name of the cluster to be provisioned
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The provider specification
	Provider             *CreateClusterProviderSpec `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateClusterMsg) Reset()         { *m = CreateClusterMsg{} }
func (m *CreateClusterMsg) String() string { return proto.CompactTextString(m) }
func (*CreateClusterMsg) ProtoMessage()    {}
func (*CreateClusterMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{0}
}
func (m *CreateClusterMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterMsg.Unmarshal(m, b)
}
func (m *CreateClusterMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterMsg.Marshal(b, m, deterministic)
}
func (dst *CreateClusterMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterMsg.Merge(dst, src)
}
func (m *CreateClusterMsg) XXX_Size() int {
	return xxx_messageInfo_CreateClusterMsg.Size(m)
}
func (m *CreateClusterMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterMsg proto.InternalMessageInfo

func (m *CreateClusterMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateClusterMsg) GetProvider() *CreateClusterProviderSpec {
	if m != nil {
		return m.Provider
	}
	return nil
}

type CreateClusterReply struct {
	// Whether or not the cluster was provisioned by this request
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// The details of the cluster request response
	Cluster              *ClusterItem `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateClusterReply) Reset()         { *m = CreateClusterReply{} }
func (m *CreateClusterReply) String() string { return proto.CompactTextString(m) }
func (*CreateClusterReply) ProtoMessage()    {}
func (*CreateClusterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{1}
}
func (m *CreateClusterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterReply.Unmarshal(m, b)
}
func (m *CreateClusterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterReply.Marshal(b, m, deterministic)
}
func (dst *CreateClusterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterReply.Merge(dst, src)
}
func (m *CreateClusterReply) XXX_Size() int {
	return xxx_messageInfo_CreateClusterReply.Size(m)
}
func (m *CreateClusterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterReply proto.InternalMessageInfo

func (m *CreateClusterReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *CreateClusterReply) GetCluster() *ClusterItem {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type GetClusterMsg struct {
	// Name of the cluster to be looked up
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterMsg) Reset()         { *m = GetClusterMsg{} }
func (m *GetClusterMsg) String() string { return proto.CompactTextString(m) }
func (*GetClusterMsg) ProtoMessage()    {}
func (*GetClusterMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{2}
}
func (m *GetClusterMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterMsg.Unmarshal(m, b)
}
func (m *GetClusterMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterMsg.Marshal(b, m, deterministic)
}
func (dst *GetClusterMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterMsg.Merge(dst, src)
}
func (m *GetClusterMsg) XXX_Size() int {
	return xxx_messageInfo_GetClusterMsg.Size(m)
}
func (m *GetClusterMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterMsg.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterMsg proto.InternalMessageInfo

func (m *GetClusterMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetClusterReply struct {
	// Is the cluster in the system
	Ok                   bool               `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Cluster              *ClusterDetailItem `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetClusterReply) Reset()         { *m = GetClusterReply{} }
func (m *GetClusterReply) String() string { return proto.CompactTextString(m) }
func (*GetClusterReply) ProtoMessage()    {}
func (*GetClusterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{3}
}
func (m *GetClusterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterReply.Unmarshal(m, b)
}
func (m *GetClusterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterReply.Marshal(b, m, deterministic)
}
func (dst *GetClusterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterReply.Merge(dst, src)
}
func (m *GetClusterReply) XXX_Size() int {
	return xxx_messageInfo_GetClusterReply.Size(m)
}
func (m *GetClusterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterReply proto.InternalMessageInfo

func (m *GetClusterReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetClusterReply) GetCluster() *ClusterDetailItem {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type DeleteClusterMsg struct {
	// What is the cluster's name to destroy
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterMsg) Reset()         { *m = DeleteClusterMsg{} }
func (m *DeleteClusterMsg) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterMsg) ProtoMessage()    {}
func (*DeleteClusterMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{4}
}
func (m *DeleteClusterMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterMsg.Unmarshal(m, b)
}
func (m *DeleteClusterMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterMsg.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterMsg.Merge(dst, src)
}
func (m *DeleteClusterMsg) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterMsg.Size(m)
}
func (m *DeleteClusterMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterMsg proto.InternalMessageInfo

func (m *DeleteClusterMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteClusterReply struct {
	// Could the cluster be destroyed
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// Status of the request
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterReply) Reset()         { *m = DeleteClusterReply{} }
func (m *DeleteClusterReply) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterReply) ProtoMessage()    {}
func (*DeleteClusterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{5}
}
func (m *DeleteClusterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterReply.Unmarshal(m, b)
}
func (m *DeleteClusterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterReply.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterReply.Merge(dst, src)
}
func (m *DeleteClusterReply) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterReply.Size(m)
}
func (m *DeleteClusterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterReply proto.InternalMessageInfo

func (m *DeleteClusterReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *DeleteClusterReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetClusterListMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterListMsg) Reset()         { *m = GetClusterListMsg{} }
func (m *GetClusterListMsg) String() string { return proto.CompactTextString(m) }
func (*GetClusterListMsg) ProtoMessage()    {}
func (*GetClusterListMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{6}
}
func (m *GetClusterListMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterListMsg.Unmarshal(m, b)
}
func (m *GetClusterListMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterListMsg.Marshal(b, m, deterministic)
}
func (dst *GetClusterListMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterListMsg.Merge(dst, src)
}
func (m *GetClusterListMsg) XXX_Size() int {
	return xxx_messageInfo_GetClusterListMsg.Size(m)
}
func (m *GetClusterListMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterListMsg.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterListMsg proto.InternalMessageInfo

type GetClusterListReply struct {
	// Is the cluster in the system
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// List of clusters
	Clusters             []*ClusterItem `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetClusterListReply) Reset()         { *m = GetClusterListReply{} }
func (m *GetClusterListReply) String() string { return proto.CompactTextString(m) }
func (*GetClusterListReply) ProtoMessage()    {}
func (*GetClusterListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{7}
}
func (m *GetClusterListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterListReply.Unmarshal(m, b)
}
func (m *GetClusterListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterListReply.Marshal(b, m, deterministic)
}
func (dst *GetClusterListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterListReply.Merge(dst, src)
}
func (m *GetClusterListReply) XXX_Size() int {
	return xxx_messageInfo_GetClusterListReply.Size(m)
}
func (m *GetClusterListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterListReply proto.InternalMessageInfo

func (m *GetClusterListReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetClusterListReply) GetClusters() []*ClusterItem {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type ClusterItem struct {
	// ID of the cluster
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the cluster
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// What is the status of the cluster
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterItem) Reset()         { *m = ClusterItem{} }
func (m *ClusterItem) String() string { return proto.CompactTextString(m) }
func (*ClusterItem) ProtoMessage()    {}
func (*ClusterItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{8}
}
func (m *ClusterItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterItem.Unmarshal(m, b)
}
func (m *ClusterItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterItem.Marshal(b, m, deterministic)
}
func (dst *ClusterItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterItem.Merge(dst, src)
}
func (m *ClusterItem) XXX_Size() int {
	return xxx_messageInfo_ClusterItem.Size(m)
}
func (m *ClusterItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterItem.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterItem proto.InternalMessageInfo

func (m *ClusterItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClusterItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ClusterDetailItem struct {
	// ID of the cluster
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the cluster
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// What is the status of the cluster
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// What is the kubeconfig to connect to the cluster
	Kubeconfig           string   `protobuf:"bytes,4,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterDetailItem) Reset()         { *m = ClusterDetailItem{} }
func (m *ClusterDetailItem) String() string { return proto.CompactTextString(m) }
func (*ClusterDetailItem) ProtoMessage()    {}
func (*ClusterDetailItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{9}
}
func (m *ClusterDetailItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterDetailItem.Unmarshal(m, b)
}
func (m *ClusterDetailItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterDetailItem.Marshal(b, m, deterministic)
}
func (dst *ClusterDetailItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterDetailItem.Merge(dst, src)
}
func (m *ClusterDetailItem) XXX_Size() int {
	return xxx_messageInfo_ClusterDetailItem.Size(m)
}
func (m *ClusterDetailItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterDetailItem.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterDetailItem proto.InternalMessageInfo

func (m *ClusterDetailItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClusterDetailItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterDetailItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ClusterDetailItem) GetKubeconfig() string {
	if m != nil {
		return m.Kubeconfig
	}
	return ""
}

type CreateClusterProviderSpec struct {
	// What is the provider - currently this is aws or maas
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The version of Kubernetes
	K8SVersion string `protobuf:"bytes,2,opt,name=k8s_version,json=k8sVersion,proto3" json:"k8s_version,omitempty"`
	// Types that are valid to be assigned to ProviderInformation:
	//	*CreateClusterProviderSpec_Aws
	ProviderInformation isCreateClusterProviderSpec_ProviderInformation `protobuf_oneof:"provider_information"`
	// Whether or not the cluster is HA
	HighAvailability bool `protobuf:"varint,4,opt,name=high_availability,json=highAvailability,proto3" json:"high_availability,omitempty"`
	// The fabric to be used
	NetworkFabric        string   `protobuf:"bytes,5,opt,name=network_fabric,json=networkFabric,proto3" json:"network_fabric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterProviderSpec) Reset()         { *m = CreateClusterProviderSpec{} }
func (m *CreateClusterProviderSpec) String() string { return proto.CompactTextString(m) }
func (*CreateClusterProviderSpec) ProtoMessage()    {}
func (*CreateClusterProviderSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{10}
}
func (m *CreateClusterProviderSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterProviderSpec.Unmarshal(m, b)
}
func (m *CreateClusterProviderSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterProviderSpec.Marshal(b, m, deterministic)
}
func (dst *CreateClusterProviderSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterProviderSpec.Merge(dst, src)
}
func (m *CreateClusterProviderSpec) XXX_Size() int {
	return xxx_messageInfo_CreateClusterProviderSpec.Size(m)
}
func (m *CreateClusterProviderSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterProviderSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterProviderSpec proto.InternalMessageInfo

type isCreateClusterProviderSpec_ProviderInformation interface {
	isCreateClusterProviderSpec_ProviderInformation()
}

type CreateClusterProviderSpec_Aws struct {
	Aws *CreateClusterAWSSpec `protobuf:"bytes,3,opt,name=aws,proto3,oneof"`
}

func (*CreateClusterProviderSpec_Aws) isCreateClusterProviderSpec_ProviderInformation() {}

func (m *CreateClusterProviderSpec) GetProviderInformation() isCreateClusterProviderSpec_ProviderInformation {
	if m != nil {
		return m.ProviderInformation
	}
	return nil
}

func (m *CreateClusterProviderSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateClusterProviderSpec) GetK8SVersion() string {
	if m != nil {
		return m.K8SVersion
	}
	return ""
}

func (m *CreateClusterProviderSpec) GetAws() *CreateClusterAWSSpec {
	if x, ok := m.GetProviderInformation().(*CreateClusterProviderSpec_Aws); ok {
		return x.Aws
	}
	return nil
}

func (m *CreateClusterProviderSpec) GetHighAvailability() bool {
	if m != nil {
		return m.HighAvailability
	}
	return false
}

func (m *CreateClusterProviderSpec) GetNetworkFabric() string {
	if m != nil {
		return m.NetworkFabric
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CreateClusterProviderSpec) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CreateClusterProviderSpec_OneofMarshaler, _CreateClusterProviderSpec_OneofUnmarshaler, _CreateClusterProviderSpec_OneofSizer, []interface{}{
		(*CreateClusterProviderSpec_Aws)(nil),
	}
}

func _CreateClusterProviderSpec_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CreateClusterProviderSpec)
	// provider_information
	switch x := m.ProviderInformation.(type) {
	case *CreateClusterProviderSpec_Aws:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aws); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CreateClusterProviderSpec.ProviderInformation has unexpected type %T", x)
	}
	return nil
}

func _CreateClusterProviderSpec_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CreateClusterProviderSpec)
	switch tag {
	case 3: // provider_information.aws
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateClusterAWSSpec)
		err := b.DecodeMessage(msg)
		m.ProviderInformation = &CreateClusterProviderSpec_Aws{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CreateClusterProviderSpec_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CreateClusterProviderSpec)
	// provider_information
	switch x := m.ProviderInformation.(type) {
	case *CreateClusterProviderSpec_Aws:
		s := proto.Size(x.Aws)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateClusterAWSSpec struct {
	// The AWS Data Center
	DataCenter *CreateClusterAWSSpec_AWSDataCenter `protobuf:"bytes,1,opt,name=data_center,json=dataCenter,proto3" json:"data_center,omitempty"`
	// Credentials to build the cluster
	Credentials *CreateClusterAWSSpec_AWSCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// BYO items
	Resources *CreateClusterAWSSpec_AWSPreconfiguredItems `protobuf:"bytes,3,opt,name=resources,proto3" json:"resources,omitempty"`
	// Instance groups
	InstanceGroups       []*CreateClusterAWSSpec_AWSInstanceGroup `protobuf:"bytes,4,rep,name=instance_groups,json=instanceGroups,proto3" json:"instance_groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CreateClusterAWSSpec) Reset()         { *m = CreateClusterAWSSpec{} }
func (m *CreateClusterAWSSpec) String() string { return proto.CompactTextString(m) }
func (*CreateClusterAWSSpec) ProtoMessage()    {}
func (*CreateClusterAWSSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{11}
}
func (m *CreateClusterAWSSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterAWSSpec.Unmarshal(m, b)
}
func (m *CreateClusterAWSSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterAWSSpec.Marshal(b, m, deterministic)
}
func (dst *CreateClusterAWSSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterAWSSpec.Merge(dst, src)
}
func (m *CreateClusterAWSSpec) XXX_Size() int {
	return xxx_messageInfo_CreateClusterAWSSpec.Size(m)
}
func (m *CreateClusterAWSSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterAWSSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterAWSSpec proto.InternalMessageInfo

func (m *CreateClusterAWSSpec) GetDataCenter() *CreateClusterAWSSpec_AWSDataCenter {
	if m != nil {
		return m.DataCenter
	}
	return nil
}

func (m *CreateClusterAWSSpec) GetCredentials() *CreateClusterAWSSpec_AWSCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *CreateClusterAWSSpec) GetResources() *CreateClusterAWSSpec_AWSPreconfiguredItems {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *CreateClusterAWSSpec) GetInstanceGroups() []*CreateClusterAWSSpec_AWSInstanceGroup {
	if m != nil {
		return m.InstanceGroups
	}
	return nil
}

// Which Data Center
type CreateClusterAWSSpec_AWSDataCenter struct {
	// Which region (us-east-1, etc.)
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Which availability zones (us-east-1b, us-east-2c, us-west-2d, etc.)
	AvailabilityZones    []string `protobuf:"bytes,2,rep,name=availability_zones,json=availabilityZones,proto3" json:"availability_zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterAWSSpec_AWSDataCenter) Reset()         { *m = CreateClusterAWSSpec_AWSDataCenter{} }
func (m *CreateClusterAWSSpec_AWSDataCenter) String() string { return proto.CompactTextString(m) }
func (*CreateClusterAWSSpec_AWSDataCenter) ProtoMessage()    {}
func (*CreateClusterAWSSpec_AWSDataCenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{11, 0}
}
func (m *CreateClusterAWSSpec_AWSDataCenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter.Unmarshal(m, b)
}
func (m *CreateClusterAWSSpec_AWSDataCenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter.Marshal(b, m, deterministic)
}
func (dst *CreateClusterAWSSpec_AWSDataCenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter.Merge(dst, src)
}
func (m *CreateClusterAWSSpec_AWSDataCenter) XXX_Size() int {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter.Size(m)
}
func (m *CreateClusterAWSSpec_AWSDataCenter) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterAWSSpec_AWSDataCenter proto.InternalMessageInfo

func (m *CreateClusterAWSSpec_AWSDataCenter) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *CreateClusterAWSSpec_AWSDataCenter) GetAvailabilityZones() []string {
	if m != nil {
		return m.AvailabilityZones
	}
	return nil
}

// The credentials to use for creating the cluster
type CreateClusterAWSSpec_AWSCredentials struct {
	// The SecretKeyId for API Access
	SecretKeyId string `protobuf:"bytes,1,opt,name=secret_key_id,json=secretKeyId,proto3" json:"secret_key_id,omitempty"`
	// The SecretAccessKey for API access
	SecretAccessKey      string   `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterAWSSpec_AWSCredentials) Reset()         { *m = CreateClusterAWSSpec_AWSCredentials{} }
func (m *CreateClusterAWSSpec_AWSCredentials) String() string { return proto.CompactTextString(m) }
func (*CreateClusterAWSSpec_AWSCredentials) ProtoMessage()    {}
func (*CreateClusterAWSSpec_AWSCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{11, 1}
}
func (m *CreateClusterAWSSpec_AWSCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials.Unmarshal(m, b)
}
func (m *CreateClusterAWSSpec_AWSCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials.Marshal(b, m, deterministic)
}
func (dst *CreateClusterAWSSpec_AWSCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials.Merge(dst, src)
}
func (m *CreateClusterAWSSpec_AWSCredentials) XXX_Size() int {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials.Size(m)
}
func (m *CreateClusterAWSSpec_AWSCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterAWSSpec_AWSCredentials proto.InternalMessageInfo

func (m *CreateClusterAWSSpec_AWSCredentials) GetSecretKeyId() string {
	if m != nil {
		return m.SecretKeyId
	}
	return ""
}

func (m *CreateClusterAWSSpec_AWSCredentials) GetSecretAccessKey() string {
	if m != nil {
		return m.SecretAccessKey
	}
	return ""
}

// For when some things are already created
type CreateClusterAWSSpec_AWSPreconfiguredItems struct {
	// The VPC id, blank for for "create one for you", filled if you are BYO VPC
	VpcId string `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// Security group
	SecurityGroupId      string   `protobuf:"bytes,2,opt,name=security_group_id,json=securityGroupId,proto3" json:"security_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) Reset() {
	*m = CreateClusterAWSSpec_AWSPreconfiguredItems{}
}
func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) String() string {
	return proto.CompactTextString(m)
}
func (*CreateClusterAWSSpec_AWSPreconfiguredItems) ProtoMessage() {}
func (*CreateClusterAWSSpec_AWSPreconfiguredItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{11, 2}
}
func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems.Unmarshal(m, b)
}
func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems.Marshal(b, m, deterministic)
}
func (dst *CreateClusterAWSSpec_AWSPreconfiguredItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems.Merge(dst, src)
}
func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) XXX_Size() int {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems.Size(m)
}
func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterAWSSpec_AWSPreconfiguredItems proto.InternalMessageInfo

func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) GetVpcId() string {
	if m != nil {
		return m.VpcId
	}
	return ""
}

func (m *CreateClusterAWSSpec_AWSPreconfiguredItems) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

// Instance groups define a type and number of instances
type CreateClusterAWSSpec_AWSInstanceGroup struct {
	// Instance type (m5.large, etc.)
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Minimum number of instances (defaults to zero)
	MinQuantity int32 `protobuf:"varint,2,opt,name=min_quantity,json=minQuantity,proto3" json:"min_quantity,omitempty"`
	// Maximum number of instances (defaults to zero)
	MaxQuantity          int32    `protobuf:"varint,3,opt,name=max_quantity,json=maxQuantity,proto3" json:"max_quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterAWSSpec_AWSInstanceGroup) Reset()         { *m = CreateClusterAWSSpec_AWSInstanceGroup{} }
func (m *CreateClusterAWSSpec_AWSInstanceGroup) String() string { return proto.CompactTextString(m) }
func (*CreateClusterAWSSpec_AWSInstanceGroup) ProtoMessage()    {}
func (*CreateClusterAWSSpec_AWSInstanceGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{11, 3}
}
func (m *CreateClusterAWSSpec_AWSInstanceGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup.Unmarshal(m, b)
}
func (m *CreateClusterAWSSpec_AWSInstanceGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup.Marshal(b, m, deterministic)
}
func (dst *CreateClusterAWSSpec_AWSInstanceGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup.Merge(dst, src)
}
func (m *CreateClusterAWSSpec_AWSInstanceGroup) XXX_Size() int {
	return xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup.Size(m)
}
func (m *CreateClusterAWSSpec_AWSInstanceGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterAWSSpec_AWSInstanceGroup proto.InternalMessageInfo

func (m *CreateClusterAWSSpec_AWSInstanceGroup) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateClusterAWSSpec_AWSInstanceGroup) GetMinQuantity() int32 {
	if m != nil {
		return m.MinQuantity
	}
	return 0
}

func (m *CreateClusterAWSSpec_AWSInstanceGroup) GetMaxQuantity() int32 {
	if m != nil {
		return m.MaxQuantity
	}
	return 0
}

// Get version of API Server
type GetVersionMsg struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionMsg) Reset()         { *m = GetVersionMsg{} }
func (m *GetVersionMsg) String() string { return proto.CompactTextString(m) }
func (*GetVersionMsg) ProtoMessage()    {}
func (*GetVersionMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{12}
}
func (m *GetVersionMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionMsg.Unmarshal(m, b)
}
func (m *GetVersionMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionMsg.Marshal(b, m, deterministic)
}
func (dst *GetVersionMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionMsg.Merge(dst, src)
}
func (m *GetVersionMsg) XXX_Size() int {
	return xxx_messageInfo_GetVersionMsg.Size(m)
}
func (m *GetVersionMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionMsg.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionMsg proto.InternalMessageInfo

// Reply for version request
type GetVersionReply struct {
	// If operation was OK
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// Version Information
	VersionInformation   *GetVersionReply_VersionInformation `protobuf:"bytes,2,opt,name=version_information,json=versionInformation,proto3" json:"version_information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *GetVersionReply) Reset()         { *m = GetVersionReply{} }
func (m *GetVersionReply) String() string { return proto.CompactTextString(m) }
func (*GetVersionReply) ProtoMessage()    {}
func (*GetVersionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{13}
}
func (m *GetVersionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionReply.Unmarshal(m, b)
}
func (m *GetVersionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionReply.Marshal(b, m, deterministic)
}
func (dst *GetVersionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionReply.Merge(dst, src)
}
func (m *GetVersionReply) XXX_Size() int {
	return xxx_messageInfo_GetVersionReply.Size(m)
}
func (m *GetVersionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionReply proto.InternalMessageInfo

func (m *GetVersionReply) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetVersionReply) GetVersionInformation() *GetVersionReply_VersionInformation {
	if m != nil {
		return m.VersionInformation
	}
	return nil
}

type GetVersionReply_VersionInformation struct {
	// The tag on the git repository
	GitVersion string `protobuf:"bytes,1,opt,name=git_version,json=gitVersion,proto3" json:"git_version,omitempty"`
	// The hash of the git commit
	GitCommit string `protobuf:"bytes,2,opt,name=git_commit,json=gitCommit,proto3" json:"git_commit,omitempty"`
	// Whether or not the tree was clean when built
	GitTreeState string `protobuf:"bytes,3,opt,name=git_tree_state,json=gitTreeState,proto3" json:"git_tree_state,omitempty"`
	// Date of build
	BuildDate string `protobuf:"bytes,4,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	// Version of go used to compile
	GoVersion string `protobuf:"bytes,5,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`
	// Compiler used
	Compiler string `protobuf:"bytes,6,opt,name=compiler,proto3" json:"compiler,omitempty"`
	// Platform it was compiled for / running on
	Platform             string   `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionReply_VersionInformation) Reset()         { *m = GetVersionReply_VersionInformation{} }
func (m *GetVersionReply_VersionInformation) String() string { return proto.CompactTextString(m) }
func (*GetVersionReply_VersionInformation) ProtoMessage()    {}
func (*GetVersionReply_VersionInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_64223571f12e7be9, []int{13, 0}
}
func (m *GetVersionReply_VersionInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionReply_VersionInformation.Unmarshal(m, b)
}
func (m *GetVersionReply_VersionInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionReply_VersionInformation.Marshal(b, m, deterministic)
}
func (dst *GetVersionReply_VersionInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionReply_VersionInformation.Merge(dst, src)
}
func (m *GetVersionReply_VersionInformation) XXX_Size() int {
	return xxx_messageInfo_GetVersionReply_VersionInformation.Size(m)
}
func (m *GetVersionReply_VersionInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionReply_VersionInformation.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionReply_VersionInformation proto.InternalMessageInfo

func (m *GetVersionReply_VersionInformation) GetGitVersion() string {
	if m != nil {
		return m.GitVersion
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetGitTreeState() string {
	if m != nil {
		return m.GitTreeState
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetCompiler() string {
	if m != nil {
		return m.Compiler
	}
	return ""
}

func (m *GetVersionReply_VersionInformation) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateClusterMsg)(nil), "cluster_manager_api.CreateClusterMsg")
	proto.RegisterType((*CreateClusterReply)(nil), "cluster_manager_api.CreateClusterReply")
	proto.RegisterType((*GetClusterMsg)(nil), "cluster_manager_api.GetClusterMsg")
	proto.RegisterType((*GetClusterReply)(nil), "cluster_manager_api.GetClusterReply")
	proto.RegisterType((*DeleteClusterMsg)(nil), "cluster_manager_api.DeleteClusterMsg")
	proto.RegisterType((*DeleteClusterReply)(nil), "cluster_manager_api.DeleteClusterReply")
	proto.RegisterType((*GetClusterListMsg)(nil), "cluster_manager_api.GetClusterListMsg")
	proto.RegisterType((*GetClusterListReply)(nil), "cluster_manager_api.GetClusterListReply")
	proto.RegisterType((*ClusterItem)(nil), "cluster_manager_api.ClusterItem")
	proto.RegisterType((*ClusterDetailItem)(nil), "cluster_manager_api.ClusterDetailItem")
	proto.RegisterType((*CreateClusterProviderSpec)(nil), "cluster_manager_api.CreateClusterProviderSpec")
	proto.RegisterType((*CreateClusterAWSSpec)(nil), "cluster_manager_api.CreateClusterAWSSpec")
	proto.RegisterType((*CreateClusterAWSSpec_AWSDataCenter)(nil), "cluster_manager_api.CreateClusterAWSSpec.AWSDataCenter")
	proto.RegisterType((*CreateClusterAWSSpec_AWSCredentials)(nil), "cluster_manager_api.CreateClusterAWSSpec.AWSCredentials")
	proto.RegisterType((*CreateClusterAWSSpec_AWSPreconfiguredItems)(nil), "cluster_manager_api.CreateClusterAWSSpec.AWSPreconfiguredItems")
	proto.RegisterType((*CreateClusterAWSSpec_AWSInstanceGroup)(nil), "cluster_manager_api.CreateClusterAWSSpec.AWSInstanceGroup")
	proto.RegisterType((*GetVersionMsg)(nil), "cluster_manager_api.GetVersionMsg")
	proto.RegisterType((*GetVersionReply)(nil), "cluster_manager_api.GetVersionReply")
	proto.RegisterType((*GetVersionReply_VersionInformation)(nil), "cluster_manager_api.GetVersionReply.VersionInformation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterClient is the client API for Cluster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterClient interface {
	// Will provision a cluster
	CreateCluster(ctx context.Context, in *CreateClusterMsg, opts ...grpc.CallOption) (*CreateClusterReply, error)
	// Will retrieve the status of a cluster and its kubeconfig for connectivity
	GetCluster(ctx context.Context, in *GetClusterMsg, opts ...grpc.CallOption) (*GetClusterReply, error)
	// Will delete a cluster
	DeleteCluster(ctx context.Context, in *DeleteClusterMsg, opts ...grpc.CallOption) (*DeleteClusterReply, error)
	// Will retrieve a list of clusters
	GetClusterList(ctx context.Context, in *GetClusterListMsg, opts ...grpc.CallOption) (*GetClusterListReply, error)
	// Will return version information about api server
	GetVersionInformation(ctx context.Context, in *GetVersionMsg, opts ...grpc.CallOption) (*GetVersionReply, error)
}

type clusterClient struct {
	cc *grpc.ClientConn
}

func NewClusterClient(cc *grpc.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) CreateCluster(ctx context.Context, in *CreateClusterMsg, opts ...grpc.CallOption) (*CreateClusterReply, error) {
	out := new(CreateClusterReply)
	err := c.cc.Invoke(ctx, "/cluster_manager_api.Cluster/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) GetCluster(ctx context.Context, in *GetClusterMsg, opts ...grpc.CallOption) (*GetClusterReply, error) {
	out := new(GetClusterReply)
	err := c.cc.Invoke(ctx, "/cluster_manager_api.Cluster/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) DeleteCluster(ctx context.Context, in *DeleteClusterMsg, opts ...grpc.CallOption) (*DeleteClusterReply, error) {
	out := new(DeleteClusterReply)
	err := c.cc.Invoke(ctx, "/cluster_manager_api.Cluster/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) GetClusterList(ctx context.Context, in *GetClusterListMsg, opts ...grpc.CallOption) (*GetClusterListReply, error) {
	out := new(GetClusterListReply)
	err := c.cc.Invoke(ctx, "/cluster_manager_api.Cluster/GetClusterList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) GetVersionInformation(ctx context.Context, in *GetVersionMsg, opts ...grpc.CallOption) (*GetVersionReply, error) {
	out := new(GetVersionReply)
	err := c.cc.Invoke(ctx, "/cluster_manager_api.Cluster/GetVersionInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServer is the server API for Cluster service.
type ClusterServer interface {
	// Will provision a cluster
	CreateCluster(context.Context, *CreateClusterMsg) (*CreateClusterReply, error)
	// Will retrieve the status of a cluster and its kubeconfig for connectivity
	GetCluster(context.Context, *GetClusterMsg) (*GetClusterReply, error)
	// Will delete a cluster
	DeleteCluster(context.Context, *DeleteClusterMsg) (*DeleteClusterReply, error)
	// Will retrieve a list of clusters
	GetClusterList(context.Context, *GetClusterListMsg) (*GetClusterListReply, error)
	// Will return version information about api server
	GetVersionInformation(context.Context, *GetVersionMsg) (*GetVersionReply, error)
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).CreateCluster(ctx, req.(*CreateClusterMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).GetCluster(ctx, req.(*GetClusterMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).DeleteCluster(ctx, req.(*DeleteClusterMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_GetClusterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterListMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).GetClusterList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/GetClusterList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).GetClusterList(ctx, req.(*GetClusterListMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_GetVersionInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVersionMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).GetVersionInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cluster_manager_api.Cluster/GetVersionInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).GetVersionInformation(ctx, req.(*GetVersionMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cluster_manager_api.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCluster",
			Handler:    _Cluster_CreateCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _Cluster_GetCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _Cluster_DeleteCluster_Handler,
		},
		{
			MethodName: "GetClusterList",
			Handler:    _Cluster_GetClusterList_Handler,
		},
		{
			MethodName: "GetVersionInformation",
			Handler:    _Cluster_GetVersionInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_64223571f12e7be9) }

var fileDescriptor_api_64223571f12e7be9 = []byte{
	// 1188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xed, 0x92, 0x13, 0x45,
	0x17, 0x7e, 0x93, 0xfd, 0x60, 0x73, 0xc2, 0x7e, 0xf5, 0xee, 0xf2, 0xc6, 0x29, 0xc4, 0x38, 0x02,
	0xe2, 0x6a, 0x12, 0x0c, 0x3f, 0xa4, 0xb6, 0xb0, 0x24, 0x64, 0x4b, 0x8c, 0xb8, 0x16, 0xce, 0x22,
	0x58, 0x5b, 0x65, 0x0d, 0x9d, 0x99, 0x66, 0xb6, 0xcd, 0xcc, 0xf4, 0xd8, 0xdd, 0x13, 0x08, 0xfe,
	0xb1, 0xbc, 0x04, 0xf5, 0xce, 0xbc, 0x05, 0x2f, 0x80, 0xdf, 0x5a, 0x45, 0x59, 0xdd, 0xd3, 0x49,
	0x26, 0x1f, 0x4b, 0x40, 0x7f, 0x6d, 0xfa, 0x7c, 0x3d, 0xcf, 0x39, 0x39, 0x4f, 0xa7, 0x17, 0x4a,
	0x38, 0xa1, 0xf5, 0x84, 0x33, 0xc9, 0xd0, 0x8e, 0x17, 0xa6, 0x42, 0x12, 0xee, 0x46, 0x38, 0xc6,
	0x01, 0xe1, 0x2e, 0x4e, 0xa8, 0x75, 0x31, 0x60, 0x2c, 0x08, 0x49, 0x03, 0x27, 0xb4, 0x81, 0xe3,
	0x98, 0x49, 0x2c, 0x29, 0x8b, 0x45, 0x96, 0x62, 0x7d, 0xa4, 0xff, 0x78, 0xb5, 0x80, 0xc4, 0x35,
	0xf1, 0x14, 0x07, 0x01, 0xe1, 0x0d, 0x96, 0xe8, 0x88, 0xd9, 0x68, 0x9b, 0xc3, 0x56, 0x9b, 0x13,
	0x2c, 0x49, 0x3b, 0x03, 0x3a, 0x12, 0x01, 0x42, 0xb0, 0x1c, 0xe3, 0x88, 0x54, 0x0a, 0xd5, 0xc2,
	0xb5, 0x92, 0xa3, 0x3f, 0xa3, 0x2f, 0x61, 0x2d, 0xe1, 0xac, 0x4f, 0x7d, 0xc2, 0x2b, 0xc5, 0x6a,
	0xe1, 0x5a, 0xb9, 0x59, 0xaf, 0xcf, 0xe1, 0x56, 0x9f, 0x28, 0x76, 0xdf, 0x64, 0x1c, 0x27, 0xc4,
	0x73, 0x46, 0xf9, 0xf6, 0x63, 0x40, 0x13, 0x61, 0x0e, 0x49, 0xc2, 0x01, 0xda, 0x80, 0x22, 0xeb,
	0x69, 0xcc, 0x35, 0xa7, 0xc8, 0x7a, 0xe8, 0x00, 0xce, 0x19, 0x00, 0x03, 0x58, 0x9d, 0x0f, 0x98,
	0xd9, 0x3a, 0x92, 0x44, 0xce, 0x30, 0xc1, 0x7e, 0x0f, 0xd6, 0xef, 0x12, 0xf9, 0xea, 0x96, 0x6c,
	0x0f, 0x36, 0xc7, 0x41, 0xf3, 0x39, 0xdc, 0x9e, 0xe6, 0x70, 0xf5, 0x55, 0x1c, 0x0e, 0x89, 0xc4,
	0x34, 0x9c, 0x64, 0x72, 0x15, 0xb6, 0x0e, 0x49, 0x48, 0x16, 0xcd, 0xd7, 0xbe, 0x05, 0x68, 0x22,
	0x6e, 0x3e, 0x9f, 0x0b, 0xb0, 0x2a, 0x24, 0x96, 0xa9, 0xd0, 0x74, 0x4a, 0x8e, 0x39, 0xd9, 0x3b,
	0xb0, 0x3d, 0x6e, 0xe5, 0x2b, 0x2a, 0xe4, 0x91, 0x08, 0x6c, 0x0f, 0x76, 0x26, 0x8d, 0xf3, 0x6b,
	0xde, 0x82, 0x35, 0x43, 0x56, 0x55, 0x5d, 0x7a, 0xad, 0x41, 0x8f, 0x32, 0xec, 0x0e, 0x94, 0x73,
	0x0e, 0x55, 0x9c, 0xfa, 0xa6, 0xb1, 0x22, 0xf5, 0x47, 0xad, 0x16, 0x73, 0xab, 0x34, 0x6e, 0x62,
	0x69, 0xa2, 0x09, 0x06, 0xdb, 0x33, 0x83, 0xfc, 0x2f, 0x05, 0xd1, 0x25, 0x80, 0x5e, 0xda, 0x25,
	0x1e, 0x8b, 0x9f, 0xd0, 0xa0, 0xb2, 0xac, 0x7d, 0x39, 0x8b, 0xfd, 0x77, 0x01, 0xde, 0x3a, 0x73,
	0x5f, 0xe7, 0xaa, 0xe0, 0x1d, 0x28, 0xf7, 0x6e, 0x0a, 0xb7, 0x4f, 0xb8, 0xa0, 0x2c, 0x36, 0x24,
	0xa0, 0x77, 0x53, 0x3c, 0xcc, 0x2c, 0xe8, 0x53, 0x58, 0xc2, 0x4f, 0x33, 0x1e, 0xe5, 0xe6, 0x07,
	0x8b, 0x15, 0xd2, 0x7a, 0x74, 0xac, 0xc0, 0xbe, 0xf8, 0x9f, 0xa3, 0xf2, 0xd0, 0x87, 0xb0, 0x7d,
	0x4a, 0x83, 0x53, 0x17, 0xf7, 0x31, 0x0d, 0x71, 0x97, 0x86, 0x54, 0x0e, 0x34, 0xf1, 0x35, 0x67,
	0x4b, 0x39, 0x5a, 0x39, 0x3b, 0xba, 0x02, 0x1b, 0x31, 0x91, 0x4f, 0x19, 0xef, 0xb9, 0x4f, 0x70,
	0x97, 0x53, 0xaf, 0xb2, 0xa2, 0xf9, 0xac, 0x1b, 0xeb, 0xe7, 0xda, 0x78, 0xe7, 0x02, 0xec, 0x0e,
	0x95, 0xe7, 0xd2, 0xf8, 0x09, 0xe3, 0x91, 0xbe, 0x00, 0xec, 0xdf, 0x57, 0x61, 0x77, 0x1e, 0x17,
	0xf4, 0x1d, 0x94, 0x7d, 0x2c, 0xb1, 0xeb, 0x91, 0x58, 0x2d, 0x7e, 0x41, 0xf7, 0xf2, 0xc9, 0x6b,
	0xf7, 0x52, 0x6f, 0x3d, 0x3a, 0x3e, 0xc4, 0x12, 0xb7, 0x75, 0xba, 0x03, 0xfe, 0xe8, 0x33, 0x3a,
	0x81, 0xb2, 0xc7, 0x89, 0x4f, 0x62, 0x49, 0x71, 0x28, 0x8c, 0xa4, 0x6e, 0xbe, 0x51, 0xe5, 0xf6,
	0x38, 0xdf, 0xc9, 0x17, 0x43, 0xdf, 0x43, 0x89, 0x13, 0xc1, 0x52, 0xee, 0x91, 0xe1, 0xfc, 0x3f,
	0x7b, 0xa3, 0xca, 0xf7, 0xb9, 0xd9, 0x8b, 0x94, 0x13, 0x5f, 0xed, 0x9e, 0x70, 0xc6, 0x15, 0x91,
	0x07, 0x9b, 0x34, 0x16, 0x12, 0xc7, 0x1e, 0x71, 0x03, 0xce, 0xd2, 0x44, 0x54, 0x96, 0xb5, 0x58,
	0x0e, 0xde, 0x08, 0xa4, 0x63, 0x6a, 0xdc, 0x55, 0x25, 0x9c, 0x0d, 0x9a, 0x3f, 0x0a, 0xeb, 0x21,
	0xac, 0x4f, 0x0c, 0x4f, 0x6d, 0x36, 0x27, 0x81, 0x5a, 0xb5, 0x6c, 0x0b, 0xcd, 0x09, 0xd5, 0x00,
	0xe5, 0x57, 0xc4, 0x7d, 0xce, 0x62, 0x92, 0xa9, 0xb7, 0xe4, 0x6c, 0xe7, 0x3d, 0x27, 0xca, 0x61,
	0x3d, 0x86, 0x8d, 0xc9, 0xd1, 0x21, 0x1b, 0xd6, 0x05, 0xf1, 0x38, 0x91, 0x6e, 0x8f, 0x0c, 0xdc,
	0x91, 0xc2, 0xca, 0x99, 0xf1, 0x1e, 0x19, 0x74, 0x7c, 0xb4, 0x0f, 0xdb, 0x26, 0x06, 0x7b, 0x1e,
	0x11, 0x42, 0x85, 0x9a, 0x95, 0xdf, 0xcc, 0x1c, 0x2d, 0x6d, 0xbf, 0x47, 0x06, 0xd6, 0x09, 0xec,
	0xcd, 0x1d, 0x21, 0xda, 0x83, 0xd5, 0x7e, 0xe2, 0x8d, 0x11, 0x56, 0xfa, 0x89, 0x37, 0xaa, 0x9d,
	0x72, 0x45, 0x5e, 0x8f, 0x53, 0x45, 0x8c, 0x6b, 0x6b, 0x87, 0x1e, 0x4a, 0xc7, 0xb7, 0x42, 0xd8,
	0x9a, 0x9e, 0x9c, 0x12, 0xa7, 0x1c, 0x24, 0x23, 0x71, 0xaa, 0xcf, 0xe8, 0x5d, 0x38, 0x1f, 0xd1,
	0xd8, 0xfd, 0x31, 0xc5, 0xb1, 0x54, 0xba, 0x51, 0xe5, 0x56, 0x9c, 0x72, 0x44, 0xe3, 0x6f, 0x8c,
	0x49, 0x87, 0xe0, 0x67, 0xe3, 0x90, 0x25, 0x13, 0x82, 0x9f, 0x0d, 0x43, 0xec, 0x4d, 0xfd, 0xd3,
	0x61, 0xf4, 0xac, 0xae, 0xd1, 0x97, 0x45, 0xfd, 0x3b, 0x61, 0x2c, 0xf3, 0xef, 0xd0, 0x53, 0xd8,
	0x31, 0x77, 0x42, 0x5e, 0x62, 0x66, 0xc1, 0xe7, 0x4b, 0x67, 0xaa, 0x64, 0xdd, 0x1c, 0x3a, 0xe3,
	0x74, 0x07, 0xf5, 0x67, 0x6c, 0xd6, 0x8b, 0x02, 0xa0, 0xd9, 0x50, 0x75, 0x31, 0x05, 0x54, 0x8e,
	0x2e, 0xa6, 0x6c, 0x2c, 0x10, 0xd0, 0x21, 0x06, 0x7a, 0x1b, 0xd4, 0xc9, 0xf5, 0x58, 0x14, 0x51,
	0x69, 0x26, 0x5d, 0x0a, 0xa8, 0x6c, 0x6b, 0x03, 0xba, 0x0c, 0x1b, 0xca, 0x2d, 0x39, 0x21, 0xae,
	0xba, 0x3d, 0x89, 0xb9, 0x4a, 0xcf, 0x07, 0x54, 0x3e, 0xe0, 0x84, 0x1c, 0x2b, 0x9b, 0x2a, 0xd2,
	0x4d, 0x69, 0xe8, 0xbb, 0xbe, 0x8a, 0xc8, 0x2e, 0xd4, 0x92, 0xb6, 0x1c, 0x1a, 0x77, 0xc0, 0x46,
	0x1c, 0x56, 0x0c, 0x06, 0x1b, 0x52, 0xb0, 0x60, 0xcd, 0x63, 0x51, 0x42, 0x43, 0xc2, 0x2b, 0xab,
	0xda, 0x39, 0x3a, 0x2b, 0x5f, 0x12, 0x62, 0xa9, 0x1a, 0xaa, 0x9c, 0xcb, 0x7c, 0xc3, 0x73, 0xf3,
	0xc5, 0x32, 0x9c, 0x33, 0x4a, 0x42, 0x3f, 0xc1, 0xfa, 0x84, 0xb4, 0xd0, 0x95, 0xc5, 0xf2, 0x3b,
	0x12, 0x81, 0xf5, 0xfe, 0xe2, 0x30, 0xfd, 0x35, 0xd8, 0xd6, 0x2f, 0x7f, 0xfc, 0xf9, 0x5b, 0x71,
	0xd7, 0xda, 0xd4, 0xaf, 0xab, 0xfe, 0xc7, 0x0d, 0x93, 0x77, 0x50, 0xd8, 0x47, 0x0c, 0x60, 0xfc,
	0x83, 0x8a, 0xec, 0xb3, 0xbe, 0xd6, 0x1c, 0xec, 0xe5, 0x05, 0x31, 0x19, 0xe6, 0xff, 0x35, 0xe6,
	0x36, 0x9a, 0xc6, 0x44, 0xcf, 0x60, 0x7d, 0xe2, 0x51, 0x70, 0x46, 0xb7, 0xd3, 0x0f, 0x8c, 0x33,
	0xba, 0x9d, 0x7d, 0x5f, 0x0c, 0x91, 0xf7, 0x67, 0x90, 0x7f, 0x2e, 0xc0, 0xc6, 0xe4, 0xe3, 0x01,
	0x5d, 0x5d, 0xd0, 0x8b, 0x79, 0x76, 0x58, 0xd7, 0x5e, 0x23, 0x2e, 0x43, 0xbf, 0xa8, 0xd1, 0x2f,
	0xa0, 0xdd, 0x29, 0xf4, 0x46, 0xa8, 0xf0, 0x9e, 0xc3, 0xde, 0x58, 0x23, 0xf9, 0x5d, 0xb7, 0x17,
	0xe8, 0xe9, 0x95, 0x83, 0xcf, 0x6b, 0x6e, 0x76, 0xf0, 0x66, 0x77, 0xef, 0xbc, 0x2c, 0xfc, 0xda,
	0xfa, 0xab, 0x80, 0x06, 0xb0, 0x63, 0x48, 0x57, 0x8f, 0xb2, 0x32, 0xd5, 0xd6, 0xfd, 0x8e, 0x7d,
	0x02, 0xe7, 0x8f, 0x71, 0x24, 0xd2, 0x38, 0xa8, 0xb6, 0xbf, 0x6e, 0x3f, 0x40, 0x37, 0x4e, 0xa5,
	0x4c, 0xc4, 0x41, 0xa3, 0x11, 0x50, 0x79, 0x9a, 0x76, 0xeb, 0x1e, 0x8b, 0x1a, 0x22, 0x0b, 0xa8,
	0x79, 0xb1, 0x27, 0x87, 0x7d, 0xd5, 0x0c, 0x97, 0x9a, 0x7a, 0xc4, 0xef, 0x61, 0x3f, 0xa2, 0xf1,
	0xed, 0x7c, 0x5c, 0x9d, 0xb2, 0xe6, 0x6a, 0xff, 0x7a, 0xbd, 0x59, 0xbf, 0xbe, 0x5f, 0x2c, 0x16,
	0x9a, 0x5b, 0x38, 0x49, 0x42, 0xea, 0xe9, 0xae, 0x1b, 0x3f, 0x08, 0x16, 0x1f, 0xcc, 0x58, 0xf8,
	0xb7, 0x70, 0xe9, 0x88, 0x71, 0x52, 0xc5, 0x5d, 0x96, 0xca, 0xea, 0x1c, 0xb6, 0xff, 0x8a, 0x5d,
	0x77, 0x55, 0xff, 0x77, 0x70, 0xe3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10, 0xac, 0x44, 0x86,
	0x8b, 0x0c, 0x00, 0x00,
}
