// Code generated by go-bindata.
// sources:
// assets/generated/swagger/api.swagger.json
// DO NOT EDIT!

package swaggerjson

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiSwaggerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\xfd\x6f\xdb\xb6\xb6\xbf\xf7\xaf\x38\xf0\x7b\xc0\x4b\x81\xc6\x6e\xfb\xb0\x8b\xa1\xc3\xb0\x9b\xa5\xb8\x5d\xd0\xa6\x0b\x9a\xae\xc1\x70\x3b\x18\xb4\x74\x6c\x73\x91\x48\x95\xa4\xec\x79\x17\xfd\xdf\x2f\xf8\x21\x5b\x92\x45\x5b\x96\x9c\x58\x69\x7c\x81\x8b\xa5\x16\xc9\xf3\x29\xf2\x7c\xf1\xe8\x3f\x4f\x00\x7a\x72\x4e\x26\x13\x14\xbd\x57\xd0\x7b\xd9\x7f\xde\x7b\xa6\x7f\xa3\x6c\xcc\x7b\xaf\x40\x3f\x07\xe8\x29\xaa\x22\xd4\xcf\xcf\xa3\x54\x2a\x14\x70\x49\x18\x99\xa0\x80\xb3\xab\x0b\x33\x1e\xa0\x37\x43\x21\x29\x67\x7a\xd4\xec\x79\x3f\x5b\x08\xa0\x17\x70\xa6\x48\xa0\x96\xab\x01\xf4\x18\x89\xcd\x72\xd7\x24\x96\x29\x9b\xc0\xf9\xfb\xf3\x8f\x6e\x38\x40\x2f\x15\x91\x7e\x38\x55\x2a\x91\xaf\x06\x83\x09\x55\xd3\x74\xd4\x0f\x78\x3c\x90\x76\xfc\x69\xc0\x02\x35\x08\x2c\x2e\xa7\xb1\xc5\xe5\x94\x24\x74\xb5\x06\xc6\x84\x9a\x55\x48\x18\x53\xf6\xcf\xfc\xc4\x3e\xe5\x3d\x33\xec\xeb\x13\x80\xaf\x86\x5a\x19\x4c\x31\x46\xd9\x7b\x05\xff\xb6\x38\x1b\xd8\x19\x01\xfa\x1f\x7a\xc6\x1f\x66\x6c\xc0\x99\x4c\x0b\x83\x49\x92\x44\x34\x20\x8a\x72\x36\xf8\x53\x72\xb6\x1a\x9b\x08\x1e\xa6\x41\xcd\xb1\x44\x4d\xe5\x8a\xe5\x03\x92\xd0\xc1\xec\x45\x46\x65\x9e\x7b\x13\xcc\x33\x53\xa3\x9f\xc6\x31\x11\x0b\x4d\xee\x0d\x8d\x22\x10\xa8\x04\xc5\x19\x82\x9a\x22\x48\x45\x54\x2a\x81\x8f\x81\x80\x5b\x0c\x08\x0b\x81\x2a\x09\xb7\xe9\x08\x03\xce\xc6\x74\x02\x63\x2e\x20\xe0\x8c\x61\xa0\xe8\x8c\xaa\xc5\x92\x95\x00\x3d\x9e\xa0\x30\x28\x5f\x84\x1a\xc6\x1b\x54\x4e\x0f\xf2\x83\x04\xca\x84\x33\x89\xb2\x80\x1b\x40\xef\xe5\xf3\xe7\xa5\x9f\x00\x7a\x21\xca\x40\xd0\x44\x39\x8d\xc9\x2d\x64\x29\xd2\x02\x21\x6b\xd3\x00\x7a\xff\x2b\x70\xac\x67\xfc\xcf\x20\xc4\x31\x65\x54\xaf\x20\x33\x2e\x0d\x9d\x2e\x0c\x49\x42\x57\x58\x7e\xc0\x24\x5a\xf4\x0a\x0b\x7d\x7d\x52\xf5\xf7\xd7\x1c\x39\x09\x11\x24\x46\x85\x62\x25\x3c\xfb\xbf\x12\x21\x99\x2a\x9b\xff\x3e\xdb\x48\xe4\x7b\x12\xa3\x96\x83\x96\x4a\x26\x09\xc5\x61\x84\x10\x71\x7e\x8b\x21\xa4\x49\xbf\xbc\x04\x35\x33\xbf\xa4\x28\x16\xe5\x47\x02\xbf\xa4\x54\xa0\x16\xc9\x98\x44\x12\x4b\x8f\xd5\x22\x31\x88\x49\x25\x28\x9b\xe4\xc9\xff\xfa\x6c\x3b\x39\x64\x2e\xfb\x12\x03\x81\x6a\x78\x8b\x8b\x21\x0d\xb7\xd0\xf6\x71\x8a\x70\x6d\xc6\xbf\xc5\xc5\x45\x68\xd4\xe9\xec\xea\x02\xce\x82\x00\xa5\xec\x22\x59\xc4\x60\xa6\xa9\xab\x4d\x9a\x25\xe6\x2d\x2e\x96\xe4\x91\xee\x91\x27\x70\xa2\x11\xdf\x4e\xd3\x07\x33\xb0\xb3\xa4\xfc\x9d\x0a\xec\x93\x24\xa9\xa7\x7b\x67\x49\xd2\x61\xad\x33\xb4\x28\x64\x84\xa9\x1a\xb4\x7c\x34\x03\xbb\x2d\x98\x84\x48\x39\xe7\xa2\x8e\x68\xae\xdc\xd0\x6e\x13\x24\xd3\xd1\x12\xf3\x9a\xdb\x5d\x6e\x46\x57\x69\x4b\x04\x9f\xd1\xb0\x70\x50\x57\x91\x93\x3f\x99\xb2\x29\x12\x4e\xc8\x5c\x0e\x0c\x77\x06\xb3\x78\x4e\x04\x0e\x50\x05\x4f\xef\x8e\xb6\xd2\x53\x64\x69\x5c\x3a\x7b\xcd\xef\x29\x33\x27\x3f\x96\x65\x04\x66\xff\xab\xf8\x51\x53\xb0\xfe\xb3\x25\xa9\x68\x16\xfc\xb1\xc6\xa6\x31\x49\x23\x6d\x6d\xe5\xa0\x56\x9a\x0e\xb9\x99\x3d\x45\x26\x65\xa3\x21\x33\x9c\x57\x93\xff\x70\x7f\x2d\xa5\xd8\x0b\x31\x42\x85\x9b\x2d\x3b\x3b\x66\x65\xc9\x6d\xb0\xd2\x5e\x9b\xa1\x0f\xc0\x50\x2b\x20\xda\x15\x5b\xed\x66\x4a\x14\x50\x99\xb7\xd5\xfe\x4f\x82\x9e\xa8\x4d\xb6\x10\xa5\x12\x7c\xd1\x99\xd7\xfc\x68\xad\x1d\xad\xb5\xc3\x92\x72\xb4\xd6\xba\x2c\x98\xa3\xb5\x76\xb4\xd6\xf6\x4d\xdb\x03\xb4\xd6\x6a\x88\x20\x20\x51\x34\x22\xc1\x6d\x3f\x15\x51\x0d\xad\xfa\xed\xc3\x3b\x6d\x0f\xe8\x59\xa0\xa7\x81\xe2\x9d\xd1\xa6\x25\x29\x1a\x0a\x4a\x55\xef\x3d\xb9\x78\x9d\xa9\x96\x9b\x76\x3f\xf4\xec\xd3\x90\x4e\xb8\xdc\x12\x20\x35\x6f\x8d\xd4\x3b\x41\x1d\x4b\xfa\x5c\x20\x79\x10\x96\x74\x01\xd1\x7b\xb1\xa4\x47\x3c\x5c\x53\x02\xab\x1f\x55\x4f\x72\xea\xa1\x44\x5a\xd6\x8e\x7d\x33\xe0\x52\x4e\xea\x90\xbf\x0f\x85\x4b\xb7\xe8\x1b\x09\xff\x4c\xa5\x02\xb2\xa3\xe2\x9d\x99\x69\x0e\x81\xf7\x3c\x44\xd9\x65\xed\x2b\x60\xfb\x18\xb5\xaf\xc0\x80\x3b\xd7\xbe\x27\x39\xee\x95\xb3\x45\x83\x88\x16\xb6\xc0\x1d\x52\x46\x04\xf4\x5c\x7d\x06\xb8\xb5\x64\xad\x4c\xd0\x3b\x0d\xb0\xc3\xca\x59\xc4\xf4\x5e\xb4\xf3\xe8\x94\x1f\x9d\xf2\xc3\x92\x72\x74\xca\xbb\x2c\x98\xa3\x53\x7e\x74\xca\xf7\x4d\xdb\x03\x74\xca\xef\xda\x14\x4a\x93\x89\x20\x21\xee\x6a\x0d\xa5\x82\x81\x9b\x0a\xdc\x48\x59\x1a\x0d\x25\x30\xa1\x33\x64\x35\xac\xf7\x37\xa8\x7e\xb3\x0b\x38\xcc\x2f\xd8\x98\x8b\xd8\x8c\xe8\xb8\xa9\xe4\xc5\xfb\x5e\x0c\xa7\xe3\x1b\x77\xf0\x30\xd8\xd1\x76\x3d\xda\xae\x87\x25\xe5\x68\xbb\x76\x59\x30\x47\xdb\xf5\x41\xd8\xae\xcd\x0a\x1d\x40\xe9\xdf\xe6\x08\x44\x20\x04\x9c\x49\x7d\xb2\x52\x66\x6b\x84\x9d\x4d\xf4\x00\xb3\x02\x5b\x83\xb4\x4a\x61\x9c\x28\x50\x7c\x69\xf8\xd5\x09\xd2\x16\x6d\xa5\x2e\x1b\x76\x45\x4c\x1f\x63\x84\xb6\xc8\x81\x03\x85\x68\x05\x86\xc8\x14\x25\x91\x1c\x68\xd3\x2f\xe7\x97\x6c\x55\xd1\x34\x09\x89\x42\x20\x73\x09\xb9\x65\x20\x95\x18\x3a\xe7\xa4\x8e\xbe\xea\x35\xce\x6e\xae\xcf\x57\x2b\x74\x5b\x6b\xd7\xf1\x7d\x9c\xba\xbb\xce\x87\x0e\x68\xb0\xf1\x53\x9a\xe8\xb0\x9e\xd8\x5a\x8b\xf5\x22\x0f\x4b\x8f\x4b\x18\x3f\x62\x4d\x2e\x71\xe2\x30\xba\x3c\xc5\x28\xce\xab\xef\x0e\x45\xb8\x21\x26\x11\x5f\x60\x08\x7a\x0d\x08\xa6\x44\xa8\x0d\x0a\x6b\xab\x5c\x7f\xc1\x28\x3e\x2f\x8f\xec\x9a\xa6\x96\x50\xbd\x17\x15\x5d\x7f\xe3\xab\x88\xcd\xae\x1f\x2a\x1a\x45\x28\x40\x4e\x79\x1a\x85\x30\x42\xa0\x4c\x2a\x12\x45\x18\x02\x67\x9d\xb1\xbe\x13\x12\xdc\x92\x09\x66\xac\xad\x63\x88\xaf\x11\xa6\x37\xc5\xce\x10\x54\xd6\xf1\x4a\x11\xe9\x31\xf0\x9e\xc4\xf7\xe4\x22\x1c\x83\x59\xc7\x60\xd6\x31\x98\x75\xdf\xb4\x1c\x83\x59\x5d\x26\xe8\xdb\x0c\x66\x1d\xd3\x42\x07\x4f\x0b\xd5\xae\x24\x3e\x83\x94\xd1\x2f\x29\x02\x0d\x41\x71\xa0\x2c\xa4\x81\xf6\xfa\xd4\x94\xca\xfb\x2d\x2c\xae\x63\xd6\x1c\x6b\xbe\x1f\x41\xcd\xb7\x73\x11\xe0\x84\x0b\x10\xe8\xfe\xf5\x34\xe7\xbc\x7d\x66\x1f\xb5\x76\xce\xf5\xe0\x11\xda\x3b\x7e\x69\xa0\xe8\x0c\x81\x9a\xe6\x19\xc6\xb2\x9d\x12\x09\x24\x12\x48\xc2\x05\x8c\x10\xd9\xca\x0d\x9c\x53\x35\xb5\x1d\x37\xf4\x0e\x54\x0a\xbd\x97\xdd\xc1\x0b\x0b\xff\x41\xf8\x83\x65\x5c\x1f\x63\xcc\xa2\xcc\x83\xc3\x44\x2b\xac\x7b\x58\x08\xb7\x35\xd5\x7b\xb7\x94\x5f\x43\xaf\xb2\x52\xf5\x8f\x6b\x23\xbb\xa6\xa0\x25\x54\x1f\xa3\x7e\x96\x58\x70\x18\xf5\x5c\xb5\x80\xda\xb9\xd4\xca\x4d\x05\xba\xaa\x35\x02\x32\xe2\xa9\x02\x92\x50\x90\x28\x66\xdb\x6a\xad\x3e\xd9\x15\x1e\x4e\x91\x95\x43\xb8\x91\xb6\x36\x11\xd6\xb2\xdb\x55\x0e\xb5\x55\xbf\xa9\xf2\xe5\x85\xc2\xbf\x3f\x5d\xde\x10\x81\xd7\x09\x06\x79\xd9\x66\x47\x3b\x1f\xfd\x89\xc1\xea\x04\xd3\x86\x7a\x82\x42\xd1\x12\xb3\x7b\x24\x0c\x87\xcc\xdc\x62\x29\xc9\x20\x5b\x88\x08\x41\x8a\xaf\x4e\x8f\x2a\x8c\xcb\xe3\x77\xe1\xb3\xc5\xfc\x92\x04\x53\xca\x2c\x01\x3e\x8b\x6a\xd5\xe4\xcc\x8d\x96\x30\x9f\xd2\x60\x0a\x73\x84\xb9\xf6\x61\x15\x07\x12\x1a\x73\x36\x97\x2b\xef\x55\x8a\x47\x60\xcc\x67\x78\xb7\xc4\x96\x05\x66\x29\xfd\x60\x20\xef\x8b\x5e\x4b\x07\x8c\x05\x8f\x3d\x44\x57\xee\x07\x75\x51\x6b\xa1\x4b\xd3\xf2\xb9\xb7\xd9\x05\x5b\x11\xab\xed\x5d\x3d\xd9\x78\xb9\xd7\xd7\xbf\x38\x2f\x77\x1b\x49\x85\x9b\x65\x67\x6f\xaf\x35\xfe\x67\x6f\xaf\x8d\x59\xc0\x02\x7c\x23\x78\x9a\xb4\xa1\xc7\x1d\x2b\xcd\xe8\x61\x39\x97\x77\x62\x30\xa9\xde\x34\xec\x7a\xbb\xc3\xc8\xa8\x04\x3d\x1a\x4e\xae\x15\x61\x21\x11\xe1\xf0\xf5\xcb\xe1\xec\xe5\x33\x40\x15\xf4\x9f\x56\x83\x8c\x29\x1b\x7e\x49\x09\x53\x54\x2d\x7c\xa0\x29\x53\x58\x0e\x8f\xf7\xec\x26\xee\x1e\xff\xff\x4b\x0f\x62\x97\x94\xd1\x38\x8d\x81\xa5\xf1\x08\x85\x66\x01\x75\xa8\x4a\x38\x71\x0e\xaf\xd4\x8a\xfc\x37\x0a\xee\x43\x91\xfc\x75\xa7\x28\x92\xbf\x9a\xa1\xb8\xe6\xe2\xac\x8b\xc3\xc8\x5a\x82\x75\xe6\x81\x58\xf1\x10\x16\x56\x01\xeb\x6d\x50\xe7\x1b\xab\xce\x37\xd7\xaf\x89\x22\xe7\xc8\x4a\xfd\x06\x77\xd5\x65\x17\xb5\x6d\xa2\x69\x37\x66\x07\xb2\x0b\xc0\x49\x2a\x4f\x91\x48\x75\xfa\x62\xa3\x8e\x91\x19\xa1\x11\x19\xd1\x88\xaa\xc5\xf0\x6f\xce\xf6\xb1\xe5\xd6\xf4\xc2\xcb\x88\xe7\x51\x01\x83\x4a\x8e\x88\xd1\x33\xc8\xfe\x7e\x19\x98\xbf\xe7\xa8\xff\x0e\xd7\xa9\xf3\xcb\xde\xc2\xd1\x72\x02\x27\xa8\x3a\x72\xdd\xdb\x36\xb5\xaf\x2d\x24\xfe\xae\x1f\x11\x31\xc1\xe3\xe6\xf1\xed\x6c\x1e\x57\xc2\xf5\x12\x4d\x05\x86\x17\xa5\xf7\x6a\x67\x4d\x9b\x25\xc1\x90\x86\x8d\x8f\xc4\x4f\x57\xe7\x40\xc3\x67\x30\x8a\x08\xbb\x35\x67\xbd\xfe\xff\xe7\x5e\x60\x70\x07\xce\xd0\xfc\xb0\xe0\xe9\xe7\xde\x33\x18\x53\x93\x3b\xa6\x63\xfd\x83\x29\x7b\xfc\xf9\xf7\x5f\xf5\x1a\xd5\x52\x97\x18\xa4\x42\xef\x36\x86\x87\x4d\xd1\xbc\x76\xab\x6c\x3a\xb2\x29\x89\x87\x82\x47\x38\x24\xa2\xd9\x86\x6a\xc2\x7b\x67\x97\xa0\x17\x31\x14\xe7\xeb\x3c\x4f\x88\x60\x4f\x33\x39\x4a\xc9\x03\x6a\xfc\xa6\x30\xac\xa5\x49\xff\xe2\x02\xe6\x53\x64\x20\x79\x6c\x22\xbb\x6c\x22\x0d\xef\xb2\xf0\x98\xe5\x75\x58\x54\x9e\x37\xc8\x50\xd0\x60\x19\x48\xc9\x22\x4a\x5c\x52\xc5\xc5\xa2\x8d\xca\xd8\xbe\xc1\x4d\x0e\x9d\x55\x09\xec\x6f\x1f\xde\xad\xd8\x64\x02\x7e\x02\x13\x5e\x2d\x9c\xc6\x36\x5b\x1e\xa0\x5e\xde\x06\x0b\xb7\x58\xa0\x25\x8f\xb1\xc2\xdd\x6d\xc1\xba\x09\x55\xc3\x75\xef\x7d\x37\x35\x53\x64\x02\x9c\x59\x23\x94\x5a\xbe\x39\x99\x56\x72\x4f\x83\x0c\x78\x1c\xd3\x16\x76\x3c\x91\xd3\xa5\xdd\x4b\x15\xb8\xe5\xbc\xe0\x94\x40\x1c\x4a\x45\x54\x53\xb1\xa1\x9a\xea\x9d\x51\x00\xe3\xca\x40\xd5\x2b\xc2\x9c\x48\x08\x22\x24\xcc\xbe\x0e\xa3\x94\x46\x1e\x24\xf4\xa3\x70\x18\x36\x45\xe0\xb5\xd9\xba\xc6\x06\x42\xe8\x21\x93\xb7\x92\xa3\xd3\x2a\x0d\x64\xc2\x6d\x45\x9e\xe2\x9a\xaf\x09\x8d\xb0\x1a\xa2\x7b\x28\x1a\xc1\x3b\x77\x93\x0d\xa8\xea\xf5\x93\x88\x28\xad\xe3\x8d\xd6\xbf\x72\x93\x81\x2a\x2b\x26\x0b\xcf\xe6\x6f\x07\x20\x52\xc6\x28\xd3\x6a\xbb\xed\xed\xab\x6a\xf7\x50\x2c\xa1\x6d\xf1\xf6\x15\x8b\x53\x9a\xbe\x0d\xfe\x92\x15\xef\x29\x56\xaa\x1d\x69\x07\xd9\x57\x51\xe2\x0b\x91\x34\x76\x12\xbc\x05\x1f\xb5\x8e\x2d\x3d\x3b\x5f\x76\xaa\x8c\x9e\xdb\xfe\xe7\xfa\xc0\xd2\xfa\xb0\x16\xeb\xd8\xa4\x06\xe5\xae\x1f\x87\x88\x02\x34\xbc\xc5\xe1\x79\xe3\xb2\x44\x7b\x09\x93\xdd\x82\xd1\xe5\x4c\xfd\x0a\xd9\x5d\x32\xf4\x1e\x97\x6f\xbe\xe6\xe3\xd5\xef\xd2\xe2\xab\x7c\xcf\xa3\x78\x76\x73\x0d\xf9\x51\xd5\x58\x94\x6a\x9f\x77\xc4\xc3\x5f\xbb\x5c\xc0\xc4\xd4\x49\x6f\xc5\xc5\x55\x00\xd4\x42\xa6\x6e\xa8\xd7\xff\xf6\x69\xf6\xc8\x04\x03\x3a\x76\xdf\x32\xf8\xcc\x0a\x8b\x38\xa7\xc0\x5c\x54\xf8\x11\xbe\xfb\xa1\xfc\xf8\xad\x7b\x6c\x68\xfb\x11\xfe\xf1\x83\xe7\x68\x71\xd9\xec\xc6\x3c\x3e\xcf\x16\xf0\x9c\x3e\xee\x71\x3e\xeb\xd0\xe4\x20\x58\x6f\x7c\xd4\x62\x0f\xe0\x6b\xe4\x66\x2b\x8c\x38\xd7\x56\x86\xcf\x91\xac\x7c\xbc\xda\x21\x88\xb4\xd5\x17\x04\x64\x6a\x76\xcb\x71\x1a\x65\xf9\xfe\x26\x44\x97\xd5\xb7\x4d\x62\x20\x69\xec\x44\xf9\xea\xe5\x3c\x11\x50\x5b\xb6\xd6\x14\x50\x65\x31\x9b\x67\x0f\xcd\x6a\xca\x9a\xc2\xf2\x54\x9a\x79\x8e\xf2\x52\xc1\x57\xe3\x83\xdc\x5f\x06\x76\x90\xb3\xf5\x7c\x7d\x03\xb8\x37\xaf\xd0\x53\xea\xe3\xb3\x66\x96\xe5\x36\x8d\xbd\xf4\x72\x11\x4e\x83\x97\xd2\xed\x41\xaf\x51\x11\x1a\x5d\x28\x8c\xdb\x30\xae\x21\x2d\x2b\x3a\x36\xa6\xc8\x1a\x9b\x3a\x15\x5f\x51\xf1\xbc\x14\xe6\xc3\x37\xad\xcd\xa9\xd5\xf7\x73\xb6\x42\x5c\x7d\x4e\xa7\x35\xd4\xdc\x97\x79\x8c\x03\x66\x3e\xcc\xe3\xcf\x3d\xee\xa8\x20\x47\xd5\xb8\x17\xd5\xa8\x2d\x95\x8a\xe4\x62\x1b\xf1\x44\x3c\x28\x47\x84\xea\x13\x68\x4e\x54\x63\x98\xad\x65\x19\xca\x6c\x0c\x2a\x8f\x7f\xb8\x0b\x33\xf8\xbc\x78\xaa\x98\x08\xc8\x76\x39\x67\x01\x6c\x1b\xa8\xbd\xb3\x54\x7c\xad\xe4\x70\x6e\x21\x4f\x0e\xa9\x14\x9a\x6f\xad\x48\x37\xad\x15\x29\x24\x8a\x0c\x83\x72\x42\xb0\x36\x27\xaa\xf2\x8a\x9b\x9d\x8a\xfb\x51\xb9\x3a\x1e\x60\x33\x85\x13\x28\x79\x2a\x82\xf5\x14\xe4\x4e\xec\xaa\xc8\xa4\x54\x23\xf9\xf3\xef\xbf\x82\xd5\xd4\xee\xa8\xbf\x27\xe9\x78\xef\xea\x7f\xa8\x50\x8c\xff\x2b\x6f\xcb\xe6\xbf\xde\x50\x67\xdb\xc0\x4b\x81\x01\x59\x14\x66\x8b\x2f\x9f\x01\x2d\x3a\xf4\x0f\xda\x21\xf7\xb3\xe1\xd0\xb1\xb9\x25\xb3\x4f\x21\x48\x85\x40\xa6\xa2\x85\x75\xcb\xb5\x67\x3e\x97\xc0\x05\xc4\x84\x78\xde\xe7\xdb\xef\x65\xeb\x2c\xcd\x6c\x15\xe1\x7f\x9b\x8e\x50\x30\x54\xe8\x8b\x6f\xb5\x88\xb2\x55\x9e\x44\x3b\x04\x94\xee\x22\xe2\x56\x69\x66\x55\xc2\xd9\x25\x9a\xb6\x0d\x50\x2e\xa0\x56\x09\x6b\x4a\x27\xd3\x61\xbe\x70\xe4\x6e\xc2\x3f\xeb\xb9\xab\x6c\x73\xa2\x12\x7e\x39\xf3\x58\xe2\xa8\xe6\x5c\xdc\x0e\xc7\x64\x24\x68\xd0\x58\xe7\xec\x74\xb7\x0b\x96\x32\x3d\x8d\xde\xe9\xce\x06\xd9\xfc\x5c\x9e\x13\x99\x3f\x00\x60\xb4\x28\x5c\x86\xf2\xec\xb7\xce\xd6\x68\xac\x88\x39\x77\xcf\x2f\x9e\xd0\x84\x0b\xca\x7e\x4c\x86\x19\x64\xa5\xd3\x6d\x85\xb6\x9f\x22\xe2\x80\x33\x25\x78\x34\x4c\x22\xc2\xee\xb8\xc2\xf6\x6e\xca\x89\x03\x1e\x27\x82\x4a\xdc\x6e\x4c\xea\x57\x0f\xc5\xb7\x4d\x23\x49\xe8\x10\x59\x98\x70\xda\x38\x2e\x4b\x65\xae\x5f\x02\x81\x19\x89\x52\x84\x88\xde\x22\xd0\xe4\x55\xc2\x85\x72\x99\x30\x77\xaf\x8b\xc0\x8c\x0a\x95\x92\x08\x2e\xae\x06\xfa\xf1\x67\x76\x45\xa4\xd4\xaf\xa4\x8d\xf0\x01\xfe\xa5\x50\x30\x12\x41\x90\x4a\xc5\x63\x14\xd2\x6d\x5d\x64\x14\xa1\xcb\x87\xc7\x29\x73\x37\x1a\xdb\x86\x64\x2a\x3e\x7f\xd7\xbd\x8d\xed\xdc\xf0\x37\xbf\x3b\x64\x37\xe4\xf8\xc2\x67\xcd\xb6\x08\xb2\x5c\x17\x02\x2b\xcd\xe3\xa1\x95\x9d\x4c\xba\xc7\x5d\x9b\x9b\x41\x58\x5e\x6a\xc9\xa5\x68\x3c\x75\x87\x28\x25\x99\xb4\xb0\x47\xdd\x02\x12\xe6\x28\xd0\xb6\x34\x6e\xc0\xdf\x72\x31\xd7\xc1\xed\xeb\x7c\x25\xbc\xbd\x98\x19\x23\xf3\x1c\xae\x7a\xac\x4c\x48\xb0\x1f\xa8\x66\x25\xfb\x6d\x48\x0d\xd6\xfc\x9e\xfb\xd8\xfb\x86\xcc\x41\xc2\xeb\x9d\xef\xdb\x2a\xe7\x6a\x54\x06\x2c\x0b\xda\x36\x15\x66\x05\x25\x49\x36\xe3\x89\x85\x55\x2a\x6c\xcb\x9b\xd8\x2d\xfc\x98\x75\x38\xd9\x6a\xd5\xa0\xf4\x89\xd0\x22\xda\x4b\x04\xba\xd7\xd3\xb6\x01\x3f\x61\x28\x15\x86\xb0\x20\x71\x04\xa7\xe6\xd1\x27\x03\xa2\x6f\x7e\xd1\x16\x0a\x32\x25\x3d\xb5\x0b\x06\xe1\x61\x42\x16\x11\x27\x3b\x85\xd1\x73\xbb\xc9\x42\xe1\x26\x8f\xde\xae\xed\x3e\xf9\x6f\xf8\x73\x62\xfa\xaa\x51\x31\x21\x49\x82\x21\x48\x1e\xa5\x86\x16\x53\x7f\x5d\x55\x38\xbc\xfd\xcd\x57\x6b\xdf\x53\xe9\xde\xc6\x7a\x51\xac\x88\xa1\xb6\x3a\x51\x2e\xa4\x36\x88\x37\x59\xdc\xf7\x69\x6f\xe5\x8d\xf4\xed\x96\xd6\xbb\xf2\xd7\x79\xda\xc8\xee\x9b\x93\x5b\x5b\x4f\x29\x97\x39\x6d\xc4\xd7\x2d\x8d\xf3\xbb\xc7\xe9\x73\xc2\xca\x66\x9d\xab\x0d\xf3\x58\x75\x6e\xa7\x3d\xcc\x1d\x1b\xb2\xdc\xe9\x6d\xa5\x79\xc2\xa5\xa4\xda\x28\x17\x74\x32\x55\xc0\xf8\xbc\x99\xd8\x0a\x57\x71\xbb\x27\xa4\x8b\x71\xce\x34\x9c\x13\x09\xbf\xbe\xdd\x28\x9c\x21\xad\xac\x0a\x87\x4d\xb6\xc5\xb6\xe2\xf2\x6a\xcc\xb2\x7a\xe1\x8b\x8d\xf1\xda\x25\xdf\x96\xf3\x0c\x14\x53\x17\x92\xc5\x23\x0b\x46\xfe\x06\x69\x55\x35\x62\x68\x13\x4e\xa8\xde\x37\xea\x15\x2f\xd7\xe9\x46\xe8\x2b\x0f\x5a\xb6\x06\x9c\x34\x84\xee\xef\x17\xb8\x83\x59\xb7\xc3\x7d\xf5\x92\xa5\xef\x61\x89\xb1\x36\xae\x51\x29\xca\x26\x77\x10\x56\xfe\x36\x8b\x37\xbb\x5f\x70\xfb\x40\x12\x3f\xd5\x9d\x6a\xba\xb7\xa1\x3f\x58\x87\x7f\x95\x32\x7a\x47\x46\x18\x1d\xc4\xdf\xcf\xdf\x78\x27\x10\x19\x3c\xfc\x7e\x5f\xf3\x44\x99\x89\x23\x56\xc2\xa8\xcb\xad\xab\xf5\xf7\xda\x07\x7f\xbd\x43\x5c\x65\x6f\xb8\x52\x57\xb8\xb5\x7e\x70\xa5\x4e\x70\xcb\xfe\x2e\x1b\xba\xbf\x6d\xc3\xbf\xd8\x54\xe6\xd0\x19\x75\x77\xe0\x0d\xc0\x9d\xa0\x90\x35\xd7\xdd\xc5\x2b\xb8\xeb\xd3\xbd\x5d\x64\xe9\xfd\x2a\x9a\xe4\x07\x4d\x3d\xa0\x69\xdc\x74\x97\x30\x33\xe1\x84\x8e\x97\xa9\x2b\xa7\x33\x4f\xed\x85\x48\x8b\xcb\xc9\x97\x94\x2c\xfa\x94\x0f\x24\x8f\x71\x92\x2e\x5c\x4b\x2a\xcf\xb1\xb1\xa7\xab\x68\x16\x86\xe9\xd5\x6d\xbb\x09\xda\x8e\x56\x83\xe5\x77\x3a\x14\x87\x93\xd9\xcb\xfe\x8b\x17\xfd\xe7\x6b\x11\x8d\x75\x75\x18\xce\x69\xe8\xe5\xd1\x3e\xfc\x56\xc7\xab\x65\x1f\xfb\x53\x0d\xd0\xfd\xfa\xd3\x67\x76\x6d\xe5\x49\x15\x4c\xc9\x0c\x8b\x83\x48\x18\x53\x06\x89\xa0\x33\x1a\xe1\x04\xe5\x4f\x1e\xeb\x45\x0f\x1b\x2e\xf5\xec\x10\xde\xd8\x52\x4d\xa5\xcd\xaf\x50\x95\x4f\xc3\xb8\x4c\x89\x25\xc7\x9b\xce\x3f\x5a\x82\x47\x4b\xb0\x84\xe1\x9e\x2c\xc1\xca\x96\x70\x47\x43\x70\x6f\x86\xa0\xef\x6b\x24\x87\xb0\x0f\xb2\x93\xda\x9f\x6c\xe8\x62\xd5\x68\x1b\x4e\x77\x5b\x9d\xf7\x77\xc9\xcc\xff\xa5\x90\x6f\x58\xcf\xf6\x5e\x10\xdf\x8e\xdb\x8f\x47\xd7\xca\xdf\x06\x6b\x41\x73\xf7\xcf\xf1\xa3\xed\x55\xc6\xa5\x1b\x97\xef\x5b\xe7\xc5\xb3\x80\xba\x86\x3c\xcf\xb2\x39\xe6\xe2\x25\xf7\x38\x13\x0f\xc4\xa4\xab\xfa\x7c\xe1\xb7\xbf\x2d\xad\x57\xe3\xb5\xa0\x39\x95\x28\x5a\xc5\xdd\xb2\x05\xfc\xdd\x33\x73\x7a\x75\x87\x3d\x3a\xf3\x2e\x13\xf7\x57\xab\xb4\x68\xbd\x66\x0a\x29\xb8\xa8\x89\x43\x83\xdb\xde\x15\x7d\xf8\x6f\xbf\x97\xcb\xd7\x77\xd9\x84\xca\xd6\xbb\x82\xa9\x77\xed\x83\x29\x77\x64\x3c\x44\xbd\xe1\x70\x16\x2d\x80\x40\x4c\x6c\x96\x7c\x6c\x15\x6f\x4c\x31\x0a\xf5\x63\x17\xe6\xeb\x57\xe3\x6c\x82\x9a\xf7\x59\xe7\x50\x8e\x1d\xe7\x96\xf1\x84\x18\x34\x4f\x2c\x9a\x4b\x76\xc4\xae\xd0\xb4\xf6\x75\xf4\xc2\xad\x02\xf7\x79\xc1\xec\x37\xc3\x48\x17\x05\x5d\x76\x47\xce\xaa\x3f\x5f\xf3\x20\xd7\x1e\xb9\x24\xad\x4b\x2e\xd0\xf5\xa7\xce\xac\xc2\x4b\x4b\x29\x9c\x5d\x5d\x38\xbe\xb9\xab\xe7\xbd\xa9\x52\x89\x7c\x35\x18\x4c\xa8\x9a\xa6\xa3\x7e\xc0\xe3\x81\x24\xb1\x4c\xd9\xe4\x34\x60\x81\xca\x78\x75\xea\x78\x75\x4a\x12\xaa\x91\xfa\xfa\xe4\xeb\x93\xff\x06\x00\x00\xff\xff\x0b\x73\xd5\xee\xa0\xa5\x00\x00")

func apiSwaggerJsonBytes() ([]byte, error) {
	return bindataRead(
		_apiSwaggerJson,
		"api.swagger.json",
	)
}

func apiSwaggerJson() (*asset, error) {
	bytes, err := apiSwaggerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api.swagger.json", size: 42400, mode: os.FileMode(420), modTime: time.Unix(1538001432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api.swagger.json": apiSwaggerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api.swagger.json": {apiSwaggerJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
