{
  "swagger": "2.0",
  "info": {
    "title": "Cluster Manager API",
    "version": "v0.1.0",
    "contact": {
      "name": "Michael Venezia",
      "url": "https://github.com/venezia",
      "email": "mvenezia@gmail.com"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cluster": {
      "get": {
        "summary": "Will retrieve the status of a cluster and its kubeconfig for connectivity",
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name of the cluster to be looked up.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "delete": {
        "summary": "Will delete a cluster",
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiDeleteClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "What is the cluster's name to destroy.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will provision a cluster",
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/list": {
      "get": {
        "summary": "Will retrieve a list of clusters",
        "operationId": "GetClusterList",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetClusterListReply"
            }
          }
        },
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/getpodcount": {
      "post": {
        "summary": "Simple pod count response.  Will respond with the number of pods in the namespace provided",
        "operationId": "GetPodCount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetPodCountReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetPodCountMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/helloworld": {
      "post": {
        "summary": "Simple Hello World Service - will repeat a greeting to the name provided",
        "operationId": "HelloWorld",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiHelloWorldReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiHelloWorldMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/helm": {
      "delete": {
        "summary": "Will delete deployed helm chart",
        "operationId": "DeleteHelmChart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiDeleteHelmChartReply"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "description": "Cluster tiller should be installed on.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tiller.namespace",
            "description": "What is the tiller namespace.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tiller.version",
            "description": "What is the version of tiller/helm.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "chart",
            "description": "Chart Name.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will install (or reinstall) helm chart\nThis will be destructive if a chart has already been deployed with the same name",
        "operationId": "InstallHelmChart",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiInstallHelmChartReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiInstallHelmChartMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/tiller": {
      "post": {
        "summary": "Will install (or reinstall) tiller",
        "operationId": "ProvisionTiller",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiProvisionTillerReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiProvisionTillerMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    }
  },
  "definitions": {
    "cluster_manager_apiClusterDetailItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status": {
          "type": "string",
          "title": "What is the status of the cluster"
        },
        "kubeconfig": {
          "type": "string",
          "title": "What is the kubeconfig to connect to the cluster"
        }
      }
    },
    "cluster_manager_apiClusterItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status": {
          "type": "string",
          "title": "What is the status of the cluster"
        }
      }
    },
    "cluster_manager_apiCreateClusterAWSSpec": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "title": "The region for AWS"
        },
        "secret_key_id": {
          "type": "string",
          "title": "The SecretKeyId for API Access"
        },
        "secret_access_key": {
          "type": "string",
          "title": "The SecretAccessKey for API access"
        }
      }
    },
    "cluster_manager_apiCreateClusterMaaSSpec": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string",
          "title": "The MaaS API endpoint"
        },
        "username": {
          "type": "string",
          "title": "The username in the MaaS API"
        },
        "oauth_key": {
          "type": "string",
          "title": "The OAuth key for the endpoint"
        }
      }
    },
    "cluster_manager_apiCreateClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster to be provisioned"
        },
        "provider": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterProviderSpec",
          "title": "The provider specification"
        }
      }
    },
    "cluster_manager_apiCreateClusterProviderSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the provider - currently this is aws or maas"
        },
        "maas": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterMaaSSpec",
          "title": "The MaaS specification"
        },
        "aws": {
          "$ref": "#/definitions/cluster_manager_apiCreateClusterAWSSpec",
          "title": "The AWS specification"
        }
      }
    },
    "cluster_manager_apiCreateClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the cluster was provisioned by this request"
        },
        "cluster": {
          "$ref": "#/definitions/cluster_manager_apiClusterItem"
        },
        "error": {
          "$ref": "#/definitions/cluster_manager_apiError"
        }
      }
    },
    "cluster_manager_apiDeleteClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Could the cluster be destroyed"
        },
        "status": {
          "type": "string",
          "title": "Status of the request"
        }
      }
    },
    "cluster_manager_apiDeleteHelmChartReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    },
    "cluster_manager_apiError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "title": "The error code"
        },
        "message": {
          "type": "string",
          "title": "The error message"
        }
      }
    },
    "cluster_manager_apiGenericHelmChart": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the name of the deployment"
        },
        "namespace": {
          "type": "string",
          "title": "What is the namespace to deploy the application to"
        },
        "repo": {
          "type": "string",
          "title": "What is the chart repository"
        },
        "chart": {
          "type": "string",
          "title": "What is the chart name"
        },
        "values": {
          "type": "string",
          "title": "What are the options (nested yaml - the Values.yaml contents)"
        }
      }
    },
    "cluster_manager_apiGenericTillerSetting": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "What is the tiller namespace"
        },
        "version": {
          "type": "string",
          "title": "What is the version of tiller/helm"
        }
      }
    },
    "cluster_manager_apiGetClusterListReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cluster_manager_apiClusterItem"
          },
          "title": "List of clusters"
        }
      }
    },
    "cluster_manager_apiGetClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "cluster": {
          "$ref": "#/definitions/cluster_manager_apiClusterDetailItem"
        },
        "error": {
          "$ref": "#/definitions/cluster_manager_apiError"
        }
      }
    },
    "cluster_manager_apiGetPodCountMsg": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Namespace to fetch the pod count\nLeave empty to query all namespaces"
        }
      }
    },
    "cluster_manager_apiGetPodCountReply": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "integer",
          "format": "int32",
          "title": "Number of pods in the namespace (or all namespaces)"
        }
      }
    },
    "cluster_manager_apiHelloWorldMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "The Hello World request"
    },
    "cluster_manager_apiHelloWorldReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "The response to Hello World"
    },
    "cluster_manager_apiInstallHelmChartMsg": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "Cluster tiller should be installed on"
        },
        "tiller": {
          "$ref": "#/definitions/cluster_manager_apiGenericTillerSetting",
          "title": "Tiller settings"
        },
        "chart": {
          "$ref": "#/definitions/cluster_manager_apiGenericHelmChart",
          "title": "Chart Settings"
        }
      }
    },
    "cluster_manager_apiInstallHelmChartReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    },
    "cluster_manager_apiProvisionTillerMsg": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "Cluster tiller should be installed on"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace tiller should be installed in"
        },
        "version": {
          "type": "string",
          "title": "Versino of tiller/helm to install / upgrade to"
        },
        "cluster_wide": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the tiller a cluster-wide tiller?\nShould it have cluster-wide admin privileges?"
        },
        "admin_namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Namespaces that it should be able to admin on"
        }
      }
    },
    "cluster_manager_apiProvisionTillerReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was the operation successful"
        },
        "message": {
          "type": "string",
          "title": "What messages were given"
        }
      }
    }
  },
  "externalDocs": {
    "description": "More about Cluster Manager API",
    "url": "https://github.com/samsung-cnct/cluster-manager-api"
  }
}
