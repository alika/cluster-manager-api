{
  "swagger": "2.0",
  "info": {
    "title": "Cluster Manager API",
    "version": "v0.1.0",
    "contact": {
      "name": "Michael Venezia",
      "url": "https://github.com/venezia",
      "email": "mvenezia@gmail.com"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cluster": {
      "get": {
        "summary": "Will retrieve the status of a cluster and its kubeconfig for connectivity",
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name of the cluster to be looked up.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "delete": {
        "summary": "Will delete a cluster",
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiDeleteClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "What is the cluster's name to destroy.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will provision a cluster",
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiCreateClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/getpodcount": {
      "post": {
        "summary": "Simple pod count response.  Will respond with the number of pods in the namespace provided",
        "operationId": "GetPodCount",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetPodCountReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiGetPodCountMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/helloworld": {
      "post": {
        "summary": "Simple Hello World Service - will repeat a greeting to the name provided",
        "operationId": "HelloWorld",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiHelloWorldReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cluster_manager_apiHelloWorldMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    }
  },
  "definitions": {
    "cluster_manager_apiCreateClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster to be provisioned"
        }
      }
    },
    "cluster_manager_apiCreateClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the cluster was provisioned by this request"
        },
        "status": {
          "type": "string",
          "title": "The state of the cluster generation"
        }
      }
    },
    "cluster_manager_apiDeleteClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Could the cluster be destroyed"
        },
        "status": {
          "type": "string",
          "title": "Status of the request"
        }
      }
    },
    "cluster_manager_apiGetClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "status": {
          "type": "string",
          "title": "What is the status of the cluster"
        },
        "kubeconfig": {
          "type": "string",
          "title": "What is the kubeconfig to connect to the cluster"
        }
      }
    },
    "cluster_manager_apiGetPodCountMsg": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string",
          "title": "Namespace to fetch the pod count\nLeave empty to query all namespaces"
        }
      }
    },
    "cluster_manager_apiGetPodCountReply": {
      "type": "object",
      "properties": {
        "pods": {
          "type": "integer",
          "format": "int32",
          "title": "Number of pods in the namespace (or all namespaces)"
        }
      }
    },
    "cluster_manager_apiHelloWorldMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "The Hello World request"
    },
    "cluster_manager_apiHelloWorldReply": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "title": "The response to Hello World"
    }
  },
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
